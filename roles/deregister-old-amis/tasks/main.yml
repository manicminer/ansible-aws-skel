---
# AWS credentials are explicitly set here because these tasks are often run with delegation,
# and due to some bug the environment variables are not retained in a way that modules can
# consume them, but they are still present at play level.
# Possibly related: https://github.com/ansible/ansible/issues/10638

- name: Find old matching AMIs
  ec2_ami_facts:
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') | default(omit) }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') | default(omit) }}"
    security_token: "{{ lookup('env', 'AWS_SECURITY_TOKEN') | default(omit) }}"
    region: "{{ region }}"
    owner: self
    filters: "{{ config.tags | search_filter_from_tags }}"
  register: old_ami_search

- debug:
    var: old_ami_search

- name: Delete matching AMIs
  ec2_ami:
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') | default(omit) }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') | default(omit) }}"
    security_token: "{{ lookup('env', 'AWS_SECURITY_TOKEN') | default(omit) }}"
    region: "{{ region }}"
    image_id: "{{ item.image_id }}"
    delete_snapshot: yes
    state: absent
  with_items: "{{ (old_ami_search.images | sort(attribute='creation_date'))[:-config.retention] }}"
  ignore_errors: yes

# vim: set ft=ansible ts=2 sts=2 sw=2 expandtab:
