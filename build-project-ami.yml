---
# ./playbook.sh build-project-ami.yml -e build_id=1234 -e env=production -e project=lunar -e role=app

- import_playbook: plays/validate-build-id.yml
- import_playbook: plays/validate-env.yml
- import_playbook: plays/validate-project.yml
- import_playbook: plays/validate-role.yml


- import_playbook: plays/terminate.yml
  vars:
    hosts_pattern: "tag_ansible_true:&tag_project_{{ project }}&tag_role_ami-build:&tag_env_{{ env }}:&tag_build_role_{{ role }}"


- name: Launch ami-build instance
  hosts: localhost
  connection: local

  roles:

    - role: launch
      tags: launch
      image_type: ubuntu14
      launch_group: "{{ project }}"
      subnets: "{{ subnet_ids[region][project][env][role] }}"
      instance:
        instance_profile_name: "{{ customer }}-{{ project }}-{{ env }}-{{ role }}"
        security_groups:
          - "{{ customer }}-{{ project }}-{{ env }}-all"
          - "{{ customer }}-{{ project }}-{{ env }}-{{ role }}"
        tags:
          Name: "{{ customer }}-{{ project }}-{{ env }}-ami-build"
          role: ami-build
          project: "{{ project }}"
          build_role: "{{ role }}"
        type: t2.small
#      exact_count: 1
#      count_tag:
#        env: "{{ env }}"
#        role: ami-build
#        project: "{{ project }}"
#        build_role: "{{ role }}"


- import_playbook: plays/install-python.yml
  vars:
    hosts_pattern: "{{ project }}"


- import_playbook: plays/set-hostname.yml
  vars:
    hosts_pattern: "{{ project }}"
    hostname: "{{ project }}-{{ role }}-{{ env }}"


- import_playbook: "configure-{{ project }}.yml"
  vars:
    role: "{{ role }}"


- name: Install and remove project package to cache dependencies
  hosts: "{{ project }}"
  tags: install

  vars:
    package_name: "{{ customer }}-{{ project }}-{{ role }}-{{ env }}"

  tasks:

    - name: Install project package
      apt:
        pkg: "{{ package_name }}"
        state: present

    - name: Uninstall project package
      command: "aptitude -y -o 'Aptitude::Delete-Unused=false' purge {{ package_name }}"


- name: Build AMI
  hosts: "{{ project }}"
  connection: local
  become: no
  tags: amiplay

  vars:
    ami_name: "{{ customer }}-{{ project }}-{{ role }}-{{ env }}-{{ date_time_numeric }} [{{ build_id }}]"
    ami_description: Generated by Ansible

  roles:

    - role: build-ami
      tags: build-ami
      config:
        name: "{{ ami_name }}"
        description: "KnowledgeTree {{ project | upper }} / {{ env }} / Built by Ansible"
        tags:
          Name: "{{ customer }}-{{ project }}-{{ env }}-{{ role }}"
          env: "{{ env }}"
          project: "{{ project }}"
          role: "{{ role }}"
          build_id: "{{ build_id }}"

    - role: deregister-old-amis
      tags: deregister-old-amis
      config:
        retention: 2
        tags:
          env: "{{ env }}"
          project: "{{ project }}"
          role: "{{ role }}"

  post_tasks:

    - debug: var=ami


- import_playbook: plays/terminate.yml
  vars:
    hosts_pattern: "{{ project }}"


# vim: set ft=ansible ts=2 sts=2 sw=2 expandtab:
